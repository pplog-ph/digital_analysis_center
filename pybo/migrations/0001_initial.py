# Generated by Django 3.1.3 on 2022-04-29 01:14

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('mainphoto', models.ImageField(blank=True, null=True, upload_to='')),
                ('sub_photo_1', models.ImageField(blank=True, null=True, upload_to='')),
                ('sub_photo_2', models.ImageField(blank=True, null=True, upload_to='')),
                ('create_date', models.DateTimeField()),
                ('modify_date', models.DateTimeField(blank=True, null=True)),
                ('thumbnail_img', models.ImageField(blank=True, null=True, upload_to='')),
                ('content_summary', models.CharField(max_length=200)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_question', to=settings.AUTH_USER_MODEL)),
                ('voter', models.ManyToManyField(related_name='voter_question', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RequestWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('department', models.CharField(max_length=50)),
                ('category_state', models.CharField(choices=[('ga_analysis', 'WV홈페이지(패밀리사이트) GA 관련 분석'), ('ga_setup', 'Google Analytics 설치 및 추가 행동 데이터 추적'), ('etc', '기타 디지털 분석')], default='ga_analysis', max_length=50)),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('create_date', models.DateTimeField()),
                ('progress_state', models.CharField(choices=[('request', '요청'), ('in_progress', '진행중'), ('not_in_progress', '진행안함'), ('ok', '처리완료')], default='request', max_length=50)),
                ('feedback', models.TextField()),
                ('end_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('department', models.CharField(max_length=50)),
                ('google_email', models.EmailField(max_length=50, validators=[django.core.validators.EmailValidator()])),
                ('wv_email', models.EmailField(max_length=50, validators=[django.core.validators.EmailValidator()])),
                ('create_date', models.DateTimeField()),
                ('subscribe_state', models.CharField(choices=[('application', '구독신청(처리중)'), ('completed', '구독중')], default='application', max_length=50)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pybo.question')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('create_date', models.DateTimeField()),
                ('modify_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_answer', to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pybo.question')),
                ('voter', models.ManyToManyField(related_name='voter_answer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='subscribe',
            constraint=models.UniqueConstraint(fields=('question', 'google_email', 'wv_email'), name='name of constraint'),
        ),
    ]
